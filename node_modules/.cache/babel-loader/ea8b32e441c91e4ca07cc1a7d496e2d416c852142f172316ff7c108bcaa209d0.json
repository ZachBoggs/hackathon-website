{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dbogg\\\\first-project\\\\src\\\\ParticlesTest.js\";\nimport React from \"react\";\nimport { loadFull } from \"tsparticles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticlesTest = () => {\n  console.log(\"here\");\n  const particlesInit = async engine => {\n    console.log(\"ParticlesTest: initializing...\");\n    try {\n      await loadFull(engine);\n      console.log(\"ParticlesTest: particles loaded\");\n    } catch (err) {\n      console.error(\"ParticlesTest: error during loadFull:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: \"tsparticles\",\n    init: particlesInit,\n    options: {\n      fullScreen: {\n        enable: true,\n        zIndex: -1\n      },\n      background: {\n        color: \"#0d47a1\"\n      },\n      particles: {\n        number: {\n          value: 50\n        },\n        size: {\n          value: 3\n        },\n        move: {\n          enable: true,\n          speed: 1\n        },\n        links: {\n          enable: true,\n          color: \"#0d47a1\",\n          distance: 150\n        }\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = ParticlesTest;\nexport default ParticlesTest;\nvar _c;\n$RefreshReg$(_c, \"ParticlesTest\");","map":{"version":3,"names":["React","loadFull","jsxDEV","_jsxDEV","ParticlesTest","console","log","particlesInit","engine","err","error","Particles","id","init","options","fullScreen","enable","zIndex","background","color","particles","number","value","size","move","speed","links","distance","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dbogg/first-project/src/ParticlesTest.js"],"sourcesContent":["import React from \"react\";\r\nimport { loadFull } from \"tsparticles\";\r\n\r\nconst ParticlesTest = () => {\r\n  console.log(\"here\")\r\n  const particlesInit = async (engine) => {\r\n    console.log(\"ParticlesTest: initializing...\");\r\n\r\n    try {\r\n      await loadFull(engine);\r\n      console.log(\"ParticlesTest: particles loaded\");\r\n    } catch (err) {\r\n      console.error(\"ParticlesTest: error during loadFull:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Particles\r\n      id=\"tsparticles\"\r\n      init={particlesInit}\r\n      options={{\r\n        fullScreen: {\r\n          enable: true,\r\n          zIndex: -1,\r\n        },\r\n        background: {\r\n          color: \"#0d47a1\",\r\n        },\r\n        particles: {\r\n          number: { value: 50 },\r\n          size: { value: 3 },\r\n          move: { enable: true, speed: 1 },\r\n          links: { enable: true, color: \"#0d47a1\", distance: 150 },\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ParticlesTest;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1BC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACnB,MAAMC,aAAa,GAAG,MAAOC,MAAM,IAAK;IACtCH,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAE7C,IAAI;MACF,MAAML,QAAQ,CAACO,MAAM,CAAC;MACtBH,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAChD,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZJ,OAAO,CAACK,KAAK,CAAC,uCAAuC,EAAED,GAAG,CAAC;IAC7D;EACF,CAAC;EAED,oBACEN,OAAA,CAACQ,SAAS;IACRC,EAAE,EAAC,aAAa;IAChBC,IAAI,EAAEN,aAAc;IACpBO,OAAO,EAAE;MACPC,UAAU,EAAE;QACVC,MAAM,EAAE,IAAI;QACZC,MAAM,EAAE,CAAC;MACX,CAAC;MACDC,UAAU,EAAE;QACVC,KAAK,EAAE;MACT,CAAC;MACDC,SAAS,EAAE;QACTC,MAAM,EAAE;UAAEC,KAAK,EAAE;QAAG,CAAC;QACrBC,IAAI,EAAE;UAAED,KAAK,EAAE;QAAE,CAAC;QAClBE,IAAI,EAAE;UAAER,MAAM,EAAE,IAAI;UAAES,KAAK,EAAE;QAAE,CAAC;QAChCC,KAAK,EAAE;UAAEV,MAAM,EAAE,IAAI;UAAEG,KAAK,EAAE,SAAS;UAAEQ,QAAQ,EAAE;QAAI;MACzD;IACF;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAACC,EAAA,GAlCI5B,aAAa;AAoCnB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}