{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dbogg\\\\first-project\\\\src\\\\particlesTest.js\";\n// src/particlesTest.js\nimport React from \"react\";\nimport Particles from \"@tsparticles/react\";\nimport { loadFull } from \"tsparticles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticlesTest = () => {\n  const particlesInit = async engine => {\n    console.log(\"ParticlesTest: Loading particles...\"); // Check if this runs\n    await loadFull(engine);\n  };\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: \"tsparticles\",\n    init: particlesInit,\n    options: {\n      particles: {\n        number: {\n          value: 50\n        },\n        size: {\n          value: 3\n        },\n        move: {\n          enable: true,\n          speed: 1\n        },\n        links: {\n          enable: true,\n          color: \"#ffffff\",\n          distance: 150\n        }\n      },\n      background: {\n        color: \"#0d47a1\"\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = ParticlesTest;\nexport default ParticlesTest;\n\n/*\r\nimport React from \"react\";\r\nimport Particles from \"@tsparticles/react\";\r\nimport { loadFull } from \"tsparticles\";\r\n\r\nconst ParticlesTest = () => {\r\n  const particlesInit = async (engine) => {\r\n    console.log(\"init particles\", engine);\r\n    await loadFull(engine);\r\n  };\r\n\r\n  return (\r\n    <Particles\r\n      init={particlesInit}\r\n      options={{ particles: { number: { value: 50 }, size: { value: 5 } } }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ParticlesTest;\r\n*/\nvar _c;\n$RefreshReg$(_c, \"ParticlesTest\");","map":{"version":3,"names":["React","Particles","loadFull","jsxDEV","_jsxDEV","ParticlesTest","particlesInit","engine","console","log","id","init","options","particles","number","value","size","move","enable","speed","links","color","distance","background","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dbogg/first-project/src/particlesTest.js"],"sourcesContent":["// src/particlesTest.js\r\nimport React from \"react\";\r\nimport Particles from \"@tsparticles/react\";\r\nimport { loadFull } from \"tsparticles\";\r\n\r\nconst ParticlesTest = () => {\r\n  const particlesInit = async (engine) => {\r\n    console.log(\"ParticlesTest: Loading particles...\"); // Check if this runs\r\n    await loadFull(engine);\r\n  };\r\n\r\n  return (\r\n    <Particles\r\n      id=\"tsparticles\"\r\n      init={particlesInit}\r\n      options={{\r\n        particles: {\r\n          number: { value: 50 },\r\n          size: { value: 3 },\r\n          move: { enable: true, speed: 1 },\r\n          links: { enable: true, color: \"#ffffff\", distance: 150 },\r\n        },\r\n        background: {\r\n          color: \"#0d47a1\",\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ParticlesTest;\r\n\r\n\r\n\r\n/*\r\nimport React from \"react\";\r\nimport Particles from \"@tsparticles/react\";\r\nimport { loadFull } from \"tsparticles\";\r\n\r\nconst ParticlesTest = () => {\r\n  const particlesInit = async (engine) => {\r\n    console.log(\"init particles\", engine);\r\n    await loadFull(engine);\r\n  };\r\n\r\n  return (\r\n    <Particles\r\n      init={particlesInit}\r\n      options={{ particles: { number: { value: 50 }, size: { value: 5 } } }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ParticlesTest;\r\n*/"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,MAAMC,aAAa,GAAG,MAAOC,MAAM,IAAK;IACtCC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC,CAAC,CAAC;IACpD,MAAMP,QAAQ,CAACK,MAAM,CAAC;EACxB,CAAC;EAED,oBACEH,OAAA,CAACH,SAAS;IACRS,EAAE,EAAC,aAAa;IAChBC,IAAI,EAAEL,aAAc;IACpBM,OAAO,EAAE;MACPC,SAAS,EAAE;QACTC,MAAM,EAAE;UAAEC,KAAK,EAAE;QAAG,CAAC;QACrBC,IAAI,EAAE;UAAED,KAAK,EAAE;QAAE,CAAC;QAClBE,IAAI,EAAE;UAAEC,MAAM,EAAE,IAAI;UAAEC,KAAK,EAAE;QAAE,CAAC;QAChCC,KAAK,EAAE;UAAEF,MAAM,EAAE,IAAI;UAAEG,KAAK,EAAE,SAAS;UAAEC,QAAQ,EAAE;QAAI;MACzD,CAAC;MACDC,UAAU,EAAE;QACVF,KAAK,EAAE;MACT;IACF;EAAE;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAACC,EAAA,GAvBIvB,aAAa;AAyBnB,eAAeA,aAAa;;AAI5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}