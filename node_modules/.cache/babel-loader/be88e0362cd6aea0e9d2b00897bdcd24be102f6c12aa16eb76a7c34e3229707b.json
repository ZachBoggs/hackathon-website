{"ast":null,"code":"import React,{useState}from'react';import logo from'./logo.svg';import'./App.css';//import ParticlesTest from \"./ParticlesTest\"\n//import Particles from \"@tsparticles/react\";\n//import { loadFull } from \"tsparticles\";\n//currentNum = parseInt(localStorage.getItem('number')) || 0\nimport{useEffect,useMemo}from\"react\";import Particles,{initParticlesEngine}from\"@tsparticles/react\";// import { loadAll } from \"@tsparticles/all\"; // if you are going to use `loadAll`, install the \"@tsparticles/all\" package too.\n// import { loadFull } from \"tsparticles\"; // if you are going to use `loadFull`, install the \"tsparticles\" package too.\nimport{loadSlim}from\"@tsparticles/slim\";// if you are going to use `loadSlim`, install the \"@tsparticles/slim\" package too.\n/*\nfunction MyButton() {\n  const num = parseInt(localStorage.getItem('number')) || 0\n  localStorage.setItem('number',JSON.stringify(num + 1))\n  return (\n    <button>I'm a button</button>\n  );\n}\n  *///const num = parseInt(localStorage.getItem('number'));\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[init,setInit]=useState(false);// this should be run only once per application lifetime\nuseEffect(()=>{initParticlesEngine(async engine=>{// you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n// this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n// starting from v2 you can add only the features you need reducing the bundle size\n//await loadAll(engine);\n//await loadFull(engine);\nawait loadSlim(engine);//await loadBasic(engine);\n}).then(()=>{setInit(true);});},[]);const particlesLoaded=container=>{console.log(container);};const options=useMemo(()=>({background:{color:{value:\"#1C1C1C\"}},fpsLimit:120,interactivity:{events:{onClick:{enable:true,mode:\"push\"},onHover:{enable:true,mode:\"repulse\"}},modes:{push:{quantity:4},repulse:{distance:200,duration:2}}},particles:{color:{value:\"#ffffff\"},links:{color:\"#CCCCCC\",distance:150,enable:true,opacity:0.3,width:1},move:{direction:\"none\",enable:true,outModes:{default:\"bounce\"},random:false,speed:1,straight:false},number:{density:{enable:true},value:120},opacity:{value:0.5},shape:{type:\"star\"},size:{value:{min:1,max:5}}},detectRetina:true}),[]);const[currentNum,updateCurrentNum]=useState(parseInt(localStorage.getItem('number'))||0);function incrementNumber(event){if(event.shiftKey){updateCurrentNum(currentNum+5);}else{updateCurrentNum(currentNum+1);}//const num = parseInt(localStorage.getItem('number')) || 0\nlocalStorage.setItem('number',JSON.stringify(currentNum+(event.shiftKey?5:1)));}function decrementNumber(event){//const num = parseInt(localStorage.getItem('number')) || 0\nif(currentNum<=0){return;}if(event.shiftKey){if(currentNum<=5){updateCurrentNum(0);}else{updateCurrentNum(currentNum-5);}}else{updateCurrentNum(currentNum-1);}localStorage.setItem('number',JSON.stringify(currentNum-(event.shiftKey?5:1)));}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"title\",{children:\"First web page!\"}),/*#__PURE__*/_jsx(Particles,{id:\"tsparticles\",particlesLoaded:particlesLoaded,options:options}),/*#__PURE__*/_jsx(\"h1\",{className:\"Menu-bar\",children:\"Some sample text for a page\"}),/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:logo,className:\"App-logo\",alt:\"logo\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Edit \",/*#__PURE__*/_jsx(\"code\",{children:\"src/App.js\"}),\" and save to reload.\"]}),/*#__PURE__*/_jsx(\"a\",{className:\"App-link\",href:\"https://reactjs.org\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"Learn React\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:incrementNumber,children:\"+\"}),/*#__PURE__*/_jsx(\"span\",{style:{padding:\"0 10px\"},children:currentNum}),/*#__PURE__*/_jsx(\"button\",{onClick:decrementNumber,children:\"-\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",onChange:incrementNumber}),/*#__PURE__*/_jsx(\"p\",{children:\"after\"})]});}export default App;","map":{"version":3,"names":["React","useState","logo","useEffect","useMemo","Particles","initParticlesEngine","loadSlim","jsx","_jsx","jsxs","_jsxs","App","init","setInit","engine","then","particlesLoaded","container","console","log","options","background","color","value","fpsLimit","interactivity","events","onClick","enable","mode","onHover","modes","push","quantity","repulse","distance","duration","particles","links","opacity","width","move","direction","outModes","default","random","speed","straight","number","density","shape","type","size","min","max","detectRetina","currentNum","updateCurrentNum","parseInt","localStorage","getItem","incrementNumber","event","shiftKey","setItem","JSON","stringify","decrementNumber","className","children","id","src","alt","href","target","rel","style","padding","onChange"],"sources":["C:/Users/dbogg/first-project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n//import ParticlesTest from \"./ParticlesTest\"\n//import Particles from \"@tsparticles/react\";\n//import { loadFull } from \"tsparticles\";\n//currentNum = parseInt(localStorage.getItem('number')) || 0\n\nimport { useEffect, useMemo } from \"react\";\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\";\n// import { loadAll } from \"@tsparticles/all\"; // if you are going to use `loadAll`, install the \"@tsparticles/all\" package too.\n// import { loadFull } from \"tsparticles\"; // if you are going to use `loadFull`, install the \"tsparticles\" package too.\nimport { loadSlim } from \"@tsparticles/slim\"; // if you are going to use `loadSlim`, install the \"@tsparticles/slim\" package too.\n  \n/*\nfunction MyButton() {\n  const num = parseInt(localStorage.getItem('number')) || 0\n  localStorage.setItem('number',JSON.stringify(num + 1))\n  return (\n    <button>I'm a button</button>\n  );\n}\n  */\n//const num = parseInt(localStorage.getItem('number'));\nfunction App() {\n  const [init, setInit] = useState(false);\n\n  // this should be run only once per application lifetime\n  useEffect(() => {\n    initParticlesEngine(async (engine) => {\n      // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n      // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n      // starting from v2 you can add only the features you need reducing the bundle size\n      //await loadAll(engine);\n      //await loadFull(engine);\n      await loadSlim(engine);\n      //await loadBasic(engine);\n    }).then(() => {\n      setInit(true);\n    });\n  }, []);\n\n  const particlesLoaded = (container) => {\n    console.log(container);\n  };\n\n  const options = useMemo(\n    () => ({\n      background: {\n        color: {\n          value: \"#1C1C1C\",\n        },\n      },\n      fpsLimit: 120,\n      interactivity: {\n        events: {\n          onClick: {\n            enable: true,\n            mode: \"push\",\n          },\n          onHover: {\n            enable: true,\n            mode: \"repulse\",\n          },\n        },\n        modes: {\n          push: {\n            quantity: 4,\n          },\n          repulse: {\n            distance: 200,\n            duration: 2,\n          },\n        },\n      },\n      particles: {\n        color: {\n          value: \"#ffffff\",\n        },\n        links: {\n          color: \"#CCCCCC\",\n          distance: 150,\n          enable: true,\n          opacity: 0.3,\n          width: 1,\n        },\n        move: {\n          direction: \"none\",\n          enable: true,\n          outModes: {\n            default: \"bounce\",\n          },\n          random: false,\n          speed: 1,\n          straight: false,\n        },\n        number: {\n          density: {\n            enable: true,\n          },\n          value: 120,\n        },\n        opacity: {\n          value: 0.5,\n        },\n        shape: {\n          type: \"star\",\n        },\n        size: {\n          value: { min: 1, max: 5 },\n        },\n      },\n      detectRetina: true,\n    }),\n    [],\n  );\n\n  const [currentNum, updateCurrentNum] = useState(parseInt(localStorage.getItem('number')) || 0);\n\nfunction incrementNumber(event) {\n \n  \n    if(event.shiftKey)\n    {\n      updateCurrentNum(currentNum + 5)\n    }else\n    {\n      updateCurrentNum(currentNum + 1)\n    }\n  //const num = parseInt(localStorage.getItem('number')) || 0\n  \n  localStorage.setItem('number',JSON.stringify(currentNum + (event.shiftKey ? 5 : 1)))\n  \n}\nfunction decrementNumber(event) {\n  \n  //const num = parseInt(localStorage.getItem('number')) || 0\n  if(currentNum <= 0)\n  {\n    return\n  }\n\n  if(event.shiftKey)\n  {\n    if(currentNum <= 5)\n    {\n      updateCurrentNum(0)\n    }else\n    {\n      updateCurrentNum(currentNum - 5)\n    }\n  }else\n  {\n    updateCurrentNum(currentNum - 1)\n  }\n  \n  localStorage.setItem('number',JSON.stringify(currentNum - (event.shiftKey ? 5 : 1)))\n  \n}\n  return (\n    <div className=\"App\">\n      <title>First web page!</title>\n      <Particles\n        id=\"tsparticles\"\n        particlesLoaded={particlesLoaded}\n        options={options}\n      />\n      <h1 className='Menu-bar'>Some sample text for a page</h1>\n      \n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        \n      </header>\n      \n      \n      <p>\n      <button onClick={incrementNumber}>+</button>\n      <span style={{ padding: \"0 10px\" }}>{currentNum}</span>\n      \n      <button onClick={decrementNumber}>-</button>\n      </p>\n      <input type='text' onChange={incrementNumber}></input>\n\n      <p>after</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}